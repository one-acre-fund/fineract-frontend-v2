trigger:
  - master
  - develop

pr:
  - master
  - release/*
  - develop

pool:
  vmImage: "ubuntu-latest"

steps:
  - script: |
      VERSION_TAG=`git describe --abbrev=0 --tags`
      echo "##vso[task.setvariable variable=VERSION_TAG]$VERSION_TAG"
      IMAGE_TAGS="$(Build.SourceVersion)"
      echo "##vso[task.setvariable variable=IMAGE_SEMANTIC_HASH]$IMAGE_TAGS"
      echo Tags: $IMAGE_TAGS
      echo "##vso[task.setvariable variable=IMAGE_TAGS]$IMAGE_TAGS"
      if [[ "$(Build.SourceBranch)" == "refs/heads/master" ]]; then IMAGE_TAGS="$IMAGE_TAGS,latest"; fi;
      echo Tags: $IMAGE_TAGS
    displayName: Set tag variables

  - task: NodeTool@0
    inputs:
      versionSpec: "16.x"
    displayName: "Install Node.js"

  - script: |
      npm install
    displayName: "Install Node Packages"
    workingDirectory: "$(System.DefaultWorkingDirectory)"

  - task: SonarCloudPrepare@1
    continueOnError: true
    inputs:
      SonarCloud: "sonar-oaf"
      organization: "one-acre-fund"
      scannerMode: "CLI"
      configMode: "manual"
      cliProjectKey: "one-acre-fund_fineract-frontend-v2"
      cliProjectName: "fineract-frontend-v2"
      cliSources: $(System.DefaultWorkingDirectory)/src
      cliProjectVersion: $VERSION_TAG
      configFile: $(System.DefaultWorkingDirectory)/sonar-project.properties
      extraProperties: |
        sonar.verbose=true
        #Path to working dir
        sonar.working.directory=$(System.DefaultWorkingDirectory)
        #Path to functions dir as base for analysis
        sonar.projectBaseDir=$(System.DefaultWorkingDirectory)
        #Path to source files
        sonar.sources=$(System.DefaultWorkingDirectory)/src
        #Path to test files
        sonar.tests=./src/app
        sonar.test.inclusions=**/*.spec.ts
        #Path to report
        sonar.javascript.lcov.reportPaths=$(System.DefaultWorkingDirectory)/coverage/mifosx-web-app/lcov.info

  - script: |
      npm run test:ci
    displayName: "Run Lint and Unit Tests"
    workingDirectory: "$(System.DefaultWorkingDirectory)"
    continueOnError: true

  - script: |
      npm run test:cov
    displayName: "Generate Test Coverage Report  "
    workingDirectory: "$(System.DefaultWorkingDirectory)"
    continueOnError: true

  - task: PublishCodeCoverageResults@1
    condition: succeededOrFailed()
    continueOnError: true
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: "$(System.DefaultWorkingDirectory)/**/*coverage.xml"
      reportDirectory: "$(System.DefaultWorkingDirectory)/coverage/mifosx-web-app"

  - task: SonarCloudAnalyze@1
    continueOnError: true

  - task: SonarCloudPublish@1
    continueOnError: true
    inputs:
      pollingTimeoutSec: "300"

  - task: Docker@2
    displayName: Login to Azure registry
    inputs:
      containerRegistry: "azurecr-oaf"
      command: "login"

  - task: Docker@2
    displayName: Build and push an image to container registry
    inputs:
      command: buildAndPush
      repository: "oneacrefund/fineract-frontend-v2"
      dockerfile: "$(System.DefaultWorkingDirectory)/Dockerfile"
      containerRegistry: "azurecr-oaf"
      tags: |
        $(IMAGE_TAGS)
